1.简答题
a 保持平行

b f=72 
3d坐标转成归一化坐标 作用相机投影模型，通过内参矩阵计算

c 2

d SVD分解

e 两张图像对应的相机平移量过小或者只有相机前后移动

2.论述题
a 以FAST为例 选中某个像素点，假设亮度为 p
    设置阈值T
    以像素点为中心的选取半径为3的圆上的16个像素点
    选取圆上连续的N个点的亮度大于T-p或者小于p-T记为特征点

b sift描述子 校正主方向，确保旋转不变性， 分为主方向和辅方向
            基于特征点邻域内，通过梯度方向直方图生成描述子，形成128维的特征向量
            归一化处理特征向量的长度，进一步去除光照的影响
场景：光照 旋转 尺度

c 将一张图像或场景中出现的物体定义为 单词，很多单词组成字典
确定一幅图像中单词出现的情况来描述这幅图像，转成向量表示

生成字典： 对大量图像进行特征点提取，通过聚类的方法把所有特征点进行分类，利用k叉树的方法来表示

d 欧拉角 欧式变换矩阵  优点：非奇异性，比如欧拉角有万向锁问题； 表达更紧凑

e 4组 针对不同尺度图像，其误差可能是不同数量级的，需要归一化到同一数量级

f BA解决位姿优化过程中的累积误差 多段相机的位姿和位姿下的路标点的空间坐标进行优化
    误差函数是 观测数据和估计数据， 主要是相机位姿和三维路标点

3.综合题
a 通过提取不同图像中特征点，然后找出特征点间的匹配关系，根据匹配的特征点得到位姿，恢复出世界坐标系中三维点坐标。依次类推，将不同图像中的特征点对应的三维点恢复。

b RANSAC算法

c 可以通过迭代的方法判断求解位姿的准确性，去选取结果最好的点

d 最小二乘法 采用最速下降法 高斯牛顿法 LM算法等

e 引入深度信息 比如利用rgbd相机或者imu计算确切尺度 或者利用物理世界已知的真实尺度信息

4.程序题

a 文件搜索路径不同 
使用#include <文件名>命令时，编译器就到这个文件夹里去找对应的文件  
#include "文件名"命令，则是先在当前文件所在的目录搜索是否有符合的文件，如果没有再到Include文件夹里去找对应的文件

b 若基类的析构函数不是虚函数，那么该指针就只会调用基类的虚构函数，而派生类的析构函数就不会被调用

c 8

d C++模板是通过实例化来实现多态的
编译器为模板生成实例的必要条件是：知道模板的具体定义/实现；知道模板参数对应的实际类型

e       Node* temp; 
        Node* cur = head;
        Node* pre = NULL;
        while(cur) {
            temp = cur->next;  
            cur->next = pre; 

            pre = cur;
            cur = temp;
        }
        head = pre;
f 
while(input != 0) { // 辗转相除法
  output.push_back(input %7);
  input = input / 7;
 }
  